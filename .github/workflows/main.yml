name: Publish to Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    env:
      OUTPUT_FILE_PREFIX: CSVFilter.Setup

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pip-tools
          pip-sync requirements.txt

      - name: Read config file
        id: read_config_1
        run: |
          $version = (python -c "import configparser;config = configparser.ConfigParser();config.read('config.ini', encoding='utf-8');print(config.get('DEFAULT', 'version'))")
          echo "version=$version" >> $env:GITHUB_OUTPUT

      - name: Read introduce from config.ini
        id: read_config
        run: |
          import configparser
          config = configparser.ConfigParser()
          config.read('config.ini', encoding='utf-8')
          introduce = config['release']['introduce']

      - name: Build executable
        run: |
          echo "Using version: ${{ steps.read_config.outputs.version }}"
          $version = "${{ steps.read_config.outputs.version }}"
          pyinstaller --onefile `
                      --windowed `
                      --clean `
                      --name "${{ env.OUTPUT_FILE_PREFIX }}.$version" `
                      main.py
      - name: Create zip archive
        run: |
          $zipFileName = "${{ env.OUTPUT_FILE_PREFIX }}.${{ steps.read_config.outputs.version }}.zip"
          $exeFilePath = "dist/${{ env.OUTPUT_FILE_PREFIX }}.${{ steps.read_config.outputs.version }}.exe"
          $csvFiles = @("members.csv", "goodsdata.csv")
          $zipFiles = $csvFiles + $exeFilePath
          
          Write-Host "Creating zip archive: $zipFileName"
          Compress-Archive -Path $zipFiles -DestinationPath "dist/$zipFileName"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: v${{ steps.read_config.outputs.version }}
          release_name: Release ${{ steps.read_config.outputs.version }}
          draft: false
          prerelease: false
          body: ${{ steps.read_config.outputs.introduce }}

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/${{ env.OUTPUT_FILE_PREFIX }}.${{ steps.read_config.outputs.version }}.zip
          asset_name: ${{ env.OUTPUT_FILE_PREFIX }}.${{ steps.read_config.outputs.version }}.zip
          asset_content_type: application/zip
